#!/usr/bin/env python
'''
goatdctl - goatd control

Usage:
    goatdctl info
    goatdctl stop
    goatdctl heading
    goatdctl position
    goatdctl spin
    goatdctl rudder <angle>
    goatdctl sail <angle>

Options:
    -h --help     Show this screen.
    --version     Show goatd version

'''

import argparse
import sys

from goatdclient import Goat

if __name__ == '__main__':
    arger = argparse.ArgumentParser()
    subparsers = arger.add_subparsers(dest='command')

    help_parser = subparsers.add_parser('help')
    info_parser = subparsers.add_parser('status')
    stop_parser = subparsers.add_parser('stop')
    heading_parser = subparsers.add_parser('heading')
    position_parser = subparsers.add_parser('position')
    spin_parser = subparsers.add_parser('spin')

    rudder_parser = subparsers.add_parser('rudder')
    rudder_parser.add_argument('angle')

    sail_parser = subparsers.add_parser('sail')
    sail_parser.add_argument('angle')

    opts = arger.parse_args()

    goat = Goat()

    if opts.command == 'help':
        print(__doc__)

    if opts.command == 'status':
        try:
            v = goat.version
        except Exception as e:
            print('Problem talking to goatd: "{}"'.format(e))
            sys.exit(1)
        print('goatd version \'{}\' responding to requests on {}'.format(v,
              goat.goatd_url('/')))

    if opts.command == 'heading':
        print('heading: {}'.format(goat.heading))

    if opts.command == 'rudder':
        print('setting rudder to', opts.angle)
        goat.rudder(float(opts.angle))

    if opts.command == 'sail':
        print('setting sail to', opts.angle)
        goat.sail(float(opts.angle))

    if opts.command == 'spin':
        import time
        for i in range(90):
            a = 45 - (i)
            goat.rudder(a)
